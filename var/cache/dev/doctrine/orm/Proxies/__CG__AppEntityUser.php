<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'phoneNumber', '' . "\0" . 'App\\Entity\\User' . "\0" . 'birthDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'gender', '' . "\0" . 'App\\Entity\\User' . "\0" . 'address', '' . "\0" . 'App\\Entity\\User' . "\0" . 'inscriptionDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'speciality', '' . "\0" . 'App\\Entity\\User' . "\0" . 'certification', '' . "\0" . 'App\\Entity\\User' . "\0" . 'public_or_private', '' . "\0" . 'App\\Entity\\User' . "\0" . 'pharmacytype', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isbanned', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogs', '' . "\0" . 'App\\Entity\\User' . "\0" . 'likes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dislikes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'streams', '' . "\0" . 'App\\Entity\\User' . "\0" . 'messages', '' . "\0" . 'App\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prescriptions'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'phoneNumber', '' . "\0" . 'App\\Entity\\User' . "\0" . 'birthDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'gender', '' . "\0" . 'App\\Entity\\User' . "\0" . 'address', '' . "\0" . 'App\\Entity\\User' . "\0" . 'inscriptionDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'speciality', '' . "\0" . 'App\\Entity\\User' . "\0" . 'certification', '' . "\0" . 'App\\Entity\\User' . "\0" . 'public_or_private', '' . "\0" . 'App\\Entity\\User' . "\0" . 'pharmacytype', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isbanned', '' . "\0" . 'App\\Entity\\User' . "\0" . 'blogs', '' . "\0" . 'App\\Entity\\User' . "\0" . 'likes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dislikes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'streams', '' . "\0" . 'App\\Entity\\User' . "\0" . 'messages', '' . "\0" . 'App\\Entity\\User' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prescriptions'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIdentifier', []);

        return parent::getUserIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName(?string $firstName): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName(?string $lastName): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNumber', []);

        return parent::getPhoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoneNumber(?string $phoneNumber): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoneNumber', [$phoneNumber]);

        return parent::setPhoneNumber($phoneNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate(?string $birthDate): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        return parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender(?bool $gender): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress(?string $address): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getInscriptionDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInscriptionDate', []);

        return parent::getInscriptionDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setInscriptionDate(?\DateTimeInterface $inscriptionDate): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInscriptionDate', [$inscriptionDate]);

        return parent::setInscriptionDate($inscriptionDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpeciality(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpeciality', []);

        return parent::getSpeciality();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpeciality(?string $speciality): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpeciality', [$speciality]);

        return parent::setSpeciality($speciality);
    }

    /**
     * {@inheritDoc}
     */
    public function getCertification(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCertification', []);

        return parent::getCertification();
    }

    /**
     * {@inheritDoc}
     */
    public function setCertification(?string $certification): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCertification', [$certification]);

        return parent::setCertification($certification);
    }

    /**
     * {@inheritDoc}
     */
    public function getPharmacytype(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPharmacytype', []);

        return parent::getPharmacytype();
    }

    /**
     * {@inheritDoc}
     */
    public function setPharmacytype(?bool $pharmacytype): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPharmacytype', [$pharmacytype]);

        return parent::setPharmacytype($pharmacytype);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicOrPrivate(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicOrPrivate', []);

        return parent::getPublicOrPrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicOrPrivate(?bool $public_or_private): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicOrPrivate', [$public_or_private]);

        return parent::setPublicOrPrivate($public_or_private);
    }

    /**
     * {@inheritDoc}
     */
    public function Isbanned(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'Isbanned', []);

        return parent::Isbanned();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbanned(?bool $isbanned): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbanned', [$isbanned]);

        return parent::setIsbanned($isbanned);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function getBlogs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlogs', []);

        return parent::getBlogs();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlog(\App\Entity\Blog $blog): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlog', [$blog]);

        return parent::addBlog($blog);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlog(\App\Entity\Blog $blog): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlog', [$blog]);

        return parent::removeBlog($blog);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikes', []);

        return parent::getLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function addLike(\App\Entity\Likes $like): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLike', [$like]);

        return parent::addLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLike(\App\Entity\Likes $like): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLike', [$like]);

        return parent::removeLike($like);
    }

    /**
     * {@inheritDoc}
     */
    public function getDislikes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDislikes', []);

        return parent::getDislikes();
    }

    /**
     * {@inheritDoc}
     */
    public function addDislike(\App\Entity\Dislike $dislike): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDislike', [$dislike]);

        return parent::addDislike($dislike);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDislike(\App\Entity\Dislike $dislike): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDislike', [$dislike]);

        return parent::removeDislike($dislike);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreams(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreams', []);

        return parent::getStreams();
    }

    /**
     * {@inheritDoc}
     */
    public function addStream(\App\Entity\Stream $stream): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStream', [$stream]);

        return parent::addStream($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStream(\App\Entity\Stream $stream): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStream', [$stream]);

        return parent::removeStream($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessages', []);

        return parent::getMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\Comments $comment): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\Comments $comment): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrescriptions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrescriptions', []);

        return parent::getPrescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addPrescription(\App\Entity\Prescription $prescription): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrescription', [$prescription]);

        return parent::addPrescription($prescription);
    }

}
